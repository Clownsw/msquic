name: Stress

on:
  workflow_dispatch:
  push:
    branches:
    - main
    - release/*
  pull_request:
    branches:
    - main
    - release/*

concurrency:
  # Cancel any workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: stress-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions: read-all

jobs:
  stress:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        arch: [x64]
        tls: [schannel]
        xdp: ['-UseXdp']
        sanitize: ['-Sanitize']
    runs-on: ${{ matrix.os }}
    name: Stress
    env:
      main-timeout: 3600000
      main-repeat: 100
      main-allocfail: 100
      pr-timeout: 600000
      pr-repeat: 20
      pr-allocfail: 100
    steps:
    - name: Install Hyper-V
      run: |
        Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All
        Install-Module -Name Hyper-V -Force
        Get-Service -Name "vmms"
    - name: Start nested VM
      run: Start-VM -Name test-host
    - name: Wait for nested VM to start
      run: |
        while (1) {
          $nested_vm_state = (Get-VM -Name test-host -ErrorAction SilentlyContinue).State
          if ($nested_vm_state -eq 'Running') {
            break
          }
          Start-Sleep -Seconds 5
        }
    - name: Checkout repository
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
      with:
        fetch-depth: 0
    - name: Prepare Machine
      run: scripts/prepare-machine.ps1 -Tls ${{ matrix.tls }} -ForBuild -ForTest ${{ matrix.xdp }}
      shell: pwsh
    - name: Build
      shell: pwsh
      run: scripts/build.ps1 -Config Debug -Arch ${{ matrix.arch }} -Tls ${{ matrix.tls }} -DisableTest -DisablePerf -DynamicCRT ${{ matrix.xdp }} ${{ matrix.sanitize }}
    - name: Copy directory to nested VM
      shell: powershell
      run: |
        Copy-VMFile -Name test-host -SourcePath ./artifacts -DestinationPath 'c:\artifacts' -CreateFullPath
        Copy-VMFile -Name test-host -SourcePath ./scritps -DestinationPath 'c:\scripts' -CreateFullPath
    - name: spinquic (PR)
      timeout-minutes: 15
      shell: pwsh
      run: |
        $credential = Get-Credential
        $args = '-AZP -Config Debug -Arch ' + $env:matrix_arch + ' -Tls ' + $env:matrix_tls + ' -Timeout ' + $env:pr_timeout + ' -RepeatCount ' + $env:pr_repeat + ' -AllocFail ' + $env:pr_allocfail + ' ' + $env:matrix_xdp
        Invoke-Command -VMName test-host -Credential $credential -FilePath 'C:\scripts\spin.ps1' -ArgumentList $args
